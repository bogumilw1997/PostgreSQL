CREATE TABLE accounts (
	user_id serial PRIMARY KEY,
	username VARCHAR ( 50 ) UNIQUE NOT NULL,
	password VARCHAR ( 50 ) NOT NULL,
	email VARCHAR ( 255 ) UNIQUE NOT NULL,
	created_on TIMESTAMP NOT NULL,
        last_login TIMESTAMP 
);

CREATE TABLE roles(
   role_id serial PRIMARY KEY,
   role_name VARCHAR (255) UNIQUE NOT NULL
);

CREATE TABLE account_roles (
  user_id INT NOT NULL,
  role_id INT NOT NULL,
  grant_date TIMESTAMP,
  PRIMARY KEY (user_id, role_id),
  FOREIGN KEY (role_id)
      REFERENCES roles (role_id),
  FOREIGN KEY (user_id)
      REFERENCES accounts (user_id)
);

SELECT
    film_id,
    title,
    rental_rate
INTO TABLE film_r
FROM
    film
WHERE
    rating = 'R'
AND rental_duration = 5
ORDER BY
    title;
	
	SELECT * FROM film_r;
SELECT
    film_id,
    title,
    length 
INTO TEMP TABLE short_film
FROM
    film
WHERE
    length < 60
ORDER BY
    title;
	
	SELECT * FROM short_film;
	
CREATE TABLE action_film AS
SELECT
    film_id,
    title,
    release_year,
    length,
    rating
FROM
    film
INNER JOIN film_category USING (film_id)
WHERE
    category_id = 1;
	
SELECT * FROM action_film
ORDER BY title;

CREATE TABLE IF NOT EXISTS film_rating (rating, film_count) 
AS 
SELECT
    rating,
    COUNT (film_id)
FROM
    film
GROUP BY
    rating;
	SELECT * FROM film_rating;
	
CREATE SEQUENCE mysequence
INCREMENT 5
START 100;

SELECT nextval('mysequence');
SELECT nextval('mysequence');

SELECT
    relname sequence_name
FROM 
    pg_class 
WHERE 
    relkind = 'S';
	
	CREATE TABLE color (
    color_id INT GENERATED ALWAYS AS IDENTITY,
    color_name VARCHAR NOT NULL
);

INSERT INTO color(color_name)
VALUES ('Red');

DROP TABLE color;

CREATE TABLE color (
    color_id INT GENERATED BY DEFAULT AS IDENTITY,
    color_name VARCHAR NOT NULL
);
INSERT INTO color (color_id, color_name)
VALUES (2, 'Yellow');

CREATE TABLE shape (
    shape_id INT NOT NULL,
    shape_name VARCHAR NOT NULL
);

ALTER TABLE shape 
ALTER COLUMN shape_id ADD GENERATED ALWAYS AS IDENTITY;

ALTER TABLE shape
ALTER COLUMN shape_id
DROP IDENTITY IF EXISTS;

DROP TABLE IF EXISTS links;

CREATE TABLE links (
   link_id serial PRIMARY KEY,
   title VARCHAR (512) NOT NULL,
   url VARCHAR (1024) NOT NULL
);

ALTER TABLE links
ADD COLUMN active boolean;

ALTER TABLE links 
DROP COLUMN active;

ALTER TABLE links 
RENAME COLUMN title TO link_title;

ALTER TABLE links 
ADD COLUMN target VARCHAR(10);

ALTER TABLE links 
ALTER COLUMN target
SET DEFAULT '_blank';

INSERT INTO links (link_title, url)
VALUES('PostgreSQL Tutorial','https://www.postgresqltutorial.com/');
SELECT * FROM links;

ALTER TABLE links 
ADD CHECK (target IN ('_self', '_blank', '_parent', '_top'));
SELECT * FROM links;

ALTER TABLE links 
ADD CONSTRAINT unique_url UNIQUE ( url );
ALTER TABLE links 
RENAME TO urls;

DROP TABLE IF EXISTS vendors;
CREATE TABLE vendors (
    id serial PRIMARY KEY,
    name VARCHAR NOT NULL
);

CREATE TABLE supplier_groups (
    id serial PRIMARY KEY,
    name VARCHAR NOT NULL
);

ALTER TABLE vendors RENAME TO suppliers;

ALTER TABLE suppliers 
ADD COLUMN group_id INT NOT NULL;

ALTER TABLE suppliers 
ADD FOREIGN KEY (group_id) REFERENCES supplier_groups (id);

CREATE VIEW supplier_data 
AS SELECT
    s.id,
    s.name,
    g.name  supply_group
FROM
    suppliers s
INNER JOIN supplier_groups g ON g.id = s.group_id;

select * from supplier_data;

DROP TABLE IF EXISTS customers CASCADE;

CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    customer_name VARCHAR NOT NULL
);

ALTER TABLE customers
ADD COLUMN fax VARCHAR,
ADD COLUMN email VARCHAR;

ALTER TABLE customers 
ADD COLUMN contact_name VARCHAR NOT NULL;

ALTER TABLE suppliers 
DROP COLUMN group_id CASCADE;

CREATE TABLE assets (
    id serial PRIMARY KEY,
    name TEXT NOT NULL,
    asset_no VARCHAR NOT NULL,
    description TEXT,
    location TEXT,
    acquired_date DATE NOT NULL
);

INSERT INTO assets(name,asset_no,location,acquired_date)
VALUES('Server','10001','Server room','2017-01-01'),
      ('UPS','10002','Server room','2017-01-01');
	  
	  ALTER TABLE assets 
    ALTER COLUMN location TYPE VARCHAR,
    ALTER COLUMN description TYPE VARCHAR;
	
select * from assets;

	ALTER TABLE assets
ALTER COLUMN asset_no TYPE INT 
USING asset_no::integer;

TRUNCATE TABLE assets 
CASCADE;

DROP TABLE IF EXISTS assets cascade;

CREATE TEMP TABLE customers(
    customer_id INT
);

SELECT * FROM customers;
SELECT * FROM public.customers;
DROP TABLE customers;